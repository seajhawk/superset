# Licensed to the Apache Software Foundation (ASF) 
#    http://www.apache.org/licenses/LICENSE-2.0

x-superset-image: &superset-image apache/superset:latest
# x-superset-depends-on: &superset-depends-on
  # - db
  # - redis
x-superset-volumes: &superset-volumes
  # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
  - superset_home:/app/superset_home
  # superset loads superset_config.py to /etc/superset
  - superset:/etc/superset
  - docker:/app/docker

version: "3.7"
services:
  # redis:
  #   image: redis:latest
  #   container_name: superset_cache
  #   restart: unless-stopped
  #   volumes:
  #     - redis:/data

  # db:
  #   env_file: docker/.env-non-dev
  #   image: postgres:10
  #   container_name: superset_db
  #   restart: unless-stopped
  #   volumes:
  #     - db_home:/var/lib/postgresql/data

  superset:
    env_file: docker/.env-non-dev
    image: *superset-image
    container_name: superset_app
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    restart: unless-stopped
    ports:
      - 8088:8088
    # depends_on: *superset-depends-on
    volumes: *superset-volumes

  superset-init:
    image: *superset-image
    container_name: superset_init
    command: ["/app/docker/docker-init.sh"]
    env_file: docker/.env-non-dev
    # depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes

  superset-worker:
    image: *superset-image
    container_name: superset_worker
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    # depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes

  superset-worker-beat:
    image: *superset-image
    container_name: superset_worker_beat
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    # depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
 
volumes:
  superset_home:
    external: false
  # db_home:
  #   external: false
  # redis:
  #   external: false
  superset:
    external: false
  docker:
    external: false